export declare function assertNever(value: never): never;
declare type primitive = string | number | boolean | undefined | null;
export declare type DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;
export declare type DeepReadonlyObject<T> = {
    readonly [P in keyof T]: DeepReadonly<T[P]>;
};
export declare type DeepReadonly<T> = T extends primitive ? T : T extends Array<infer U> ? DeepReadonlyArray<U> : DeepReadonlyObject<T>;
export {};
